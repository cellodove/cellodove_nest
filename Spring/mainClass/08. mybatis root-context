<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- 어노테이션을 적용한다. -->
	<context:annotation-config />
	<!-- 스캔 어노테이션을 적용한다. -->
	<context:component-scan
		base-package="min.spring.template" />
	<!-- method 속성값인 clone 명령어는 데이터베이스의 자원을 복제하여 연결 시간을 단축한다. -->
	<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource" destroy-method="clone">
		<property name="driverClassName" value="oracle.jdbc.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" />
		<property name="username" value="scott" />
		<property name="password" value="tiger" />
	</bean>

	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- Configuration 설정 파일을 연결한다. -->
		<property name="configLocation"	value="classpath:/configuration/config.xml" />
		<!-- Mapper 설정 파일을 연결한다. -->
		<property name="mapperLocations" value="classpath:/mapper/mapper.xml" />
	</bean>
	
	
	
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- @Transactional 어노테이션을 사용할 수 있도록 설정한다. -->
	
	<!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->



</beans>
