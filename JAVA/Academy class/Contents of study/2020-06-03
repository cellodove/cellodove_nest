

객체 입출력의 개요
인스턴스를 특정 대상에 입출력하기 위해서는 인스턴스를 연속되는 바이트로 변경하여야 한다.
연속되는 바이트로 변경하는 작업을 직렬화라고 하고 반대로 파일에 바이트로 저장된 데이터를 읽어서
인스턴스 자료형으로 변환하는 작업을 역직렬화라고 한다.

메모리에 생성된 오브젝트의 인스턴스는 비 지속성을 가지므로 파일이나 데이터베이스에 저장된
데이터처럼 지속성을 가지기 위해서 객체 직렬화 기능을 제공한다.
객체에 직렬화를 적용하면 메모리에 생성된 인스턴스 정보는 파일 등을 통해서 지속성을 유지할 수 있다.
지속성은 프로그램 내에 생성된 각종 객체를 해당 프로그램 종료 이후에도 객체를 존재하게 만들어서 프로그램에서 계속 사용할 수가 있다.


ObjectOutputStream 클래스의 개요
ObjectOutputStream 클래스는 인스턴스를 객체 직렬화로 출력한다.
ObjectOutputStream 클래스는 Serializable 인터페이스와 Externalizable 인터페이스를 지원하는 객체를
스트림에 쓸 수 있다.

ObjectlnputStream 클래스의 개요
ObjectlnputStream 클래스는 객체의 직렬화된 데이터를 읽는다.
ObjectlnputStream 클래스는 Serializable 인터페이스와 Externalizable 인터페이스를 지원하는 객체를
스트림에서 읽을 수 있다.




Serializable 인터페이스
형식
public class 클래스명 implements Serializable {
… 실행 내용 …
}

Serializable 인터페이스의 구현체로 직렬화를 구현한다.
Serializable 인터페이스로 구현한 클래스 파일은 객체 직렬화가 가능하다.
일반적으로 인터페이스에는 추상 메소드가 있어서 구현한 클래스 파일에서 반드시 메소드를 구현해야 하지만,
Serializable 인터페이스는 추상 메소드가 없는 인터페이스로 단지 표시 기능을 가지는 용도로 사용하는
마커 인터페이스이다.
Serializable 인터페이스를 구현한 클래스는 클래스의 인스턴스 변수에 저장된 데이터의 영속성을 위해서
파일이나 네트워크로 전송할 수 있다.
대부분의 API는 모두 Serializable 인터페이스를 상속받아 직렬화가 가능한 클래스들이다.
Serializable 인터페이스 구현한 구현 클래스에 존재하는 모든 변수는 직렬화 대상이 된다.
Serializable 인터페이스에서 특정 인스턴스를 직렬화 대상에서 제외하고 싶으면 인스턴스 앞에
transient 지정어를 지정하면 된다.




Externalizable 인터페이스
Externalizable 인터페이스의 개요
형식
public interface Externalizable extends Serializable {
… 실행 내용 …
}

Serializable 인터페이스에서 상속받은 Externalizable 인터페이스로 역직렬화를 구현한다.
Externalizable 인터페이스의 readExternal 추상 메소드와 writeExternal 추상 메소드를 상속받은 클래스에서
정의한 인스턴스만이 역직렬화의 대상이 된다.


RandomAccessFile 클래스
RandomAccessFile 클래스의 개요
RandomAccessFile 클래스는 객체를 읽으면서 동시에 출력하는 작업을 한다.
RandomAccessFile 클래스의 인스턴스는 임의 액세스 파일에 대한 읽기 및 쓰기를 모두 지원한다.
RandomAccessFile 클래스는 데이터를 출력하면서 동시에 읽어 들이는 양방향 작업을 구현한다.
RandomAccessFile 클래스는 포인트를 사용해서 작업할 위치를 자유롭게 조절할 수 있다.




네트워크의 개요
네트워크는 미리 정의된 규약인 프로토콜로 정보를 주고받는 통신망으로 하드웨어와 소프트웨어 기반의
시스템을 의미한다.
프로토콜은 네트워크상에 있는 여러 개체 간의 데이터 교환을 관리하는 통신규약을 의미한다.
네트워크의 하드웨어는 네트워크 카드와 같은 연결 장치가 있다.
네트워크의 소프트웨어는 여러 가지 프로토콜을 기반으로 하는 통신 프로그램들이 있다.


네트워크의 OSI 7계층
네트워크의 하드웨어는 네트워크 카드와 케이블 같은 연결 장치가 있다.
네트워크의 소프트웨어는 여러 가지 프로토콜을 기반으로 하는 통신 프로그램들이 있다.
네트워크는 데이터 교환을 목적으로 로컬 PC와 원격 PC 사이의 데이터 흐름을 나타내는 구조이다.
네트워크는 일반적으로 OSI(Open System Interconnection) 7계층 모델을 가진다.
OSI 7계층은 네트워크 통신에서 생기는 여러 가지 충돌 문제를 완화하기 위하여 국제표준기구에서
표준화된 네트워크 구조를 제시한 기본 모델이다.
OSI 7계층은 통신망을 통한 상호접속에 필요한 제반 통신 절차를 정의한다.
OSI 7계층은 비슷한 기능을 제공하는 모듈들을 동일 계층으로 나눈다.



네트워크 인터페이스 계층
네트워크 인터페이스 계층은 TCP/IP는 네트워크의 물리적인 구성으로부터 독립적인 프로토콜로
링크 계층이라고도 한다.
네트워크 인터페이스 계층에서 네트워크의 물리적인 연결 매체를 통해 패킷을 주고받는 작업을 담당한다.

인터넷 계층
인터넷 계층은 패킷을 수신해야 할 상대의 주소를 지정한다.
인터넷 계층은 나가는 패킷에 대해서는 적절한 크기로 분할 하며 들어오는 패킷에 대해서는 재조립을
수행한다.
인터넷 계층에서 사용되는 규약은 인터넷 프로토콜이다.

전달 계층
전달 계층은 패킷의 운송을 담당하는 프로토콜이 정의되어 있으며 전송 계층이라고도 한다.
TCP(Transmission Control Protocol)와 UDP(User Datagram Protocol)는 송신 측과 수신 측 간의 연결성을
제공한다.

응용 계층
응용 계층은 각 응용 프로그램의 프로토콜들이 정의되는 곳이다.
웹 문서를 주고받기 위한 HTTP, 파일 교환을 위한 FTP, 메일을 전송하기 위한 SMTP 등이 응용 계층에서
정의된 프로토콜이다.




IP의 확인
IP(Internet Protocol)의 개요
인터넷(internet)은 여러 가지 프로토콜 중에서 TCP/IP 기반으로 하는 네트워크를 의미한다.
IP 주소는 네트워크에서 장치들이 서로를 인식하고 통신을 하기 위해서 사용하는 특수한 번호이다.
네트워크에 연결된 장치는 모든 기계는 IP를 가지고 있어야 한다.

고정 IP
고정 IP는 컴퓨터에 고정적으로 부여된 IP로 공인 IP라고도 한다.
고정 IP는 한번 부여되면 IP를 반납하기 전까지는 다른 장비에 부여할 수 없다.
고정 IP를 전화기로 비유하면은 일반 전화기라고 생각하면 된다.

유동 IP
유동 IP는 장비에 고정적으로 IP를 부여하지 않는 IP다.
유동 IP는 컴퓨터를 사용할 때 남아있는 IP 중에서 돌아가면서 부여한다.
유동 IP를 전화기로 비유하면은 공중전화기라고 생각하면 된다.

사설 IP
사설 IP는 사용자가 임의로 부여하는 IP다.
사설 IP는 내부적으로 인터넷 환경처럼 사용할 수 있지만, 외부 인터넷상에서는 서로 연결되지 않게
되어있다.
사설 IP를 전화기로 비유하면은 내부 전화기라고 생각하면 된다.




InetAddres 클래스
InetAddres 클래스의 개요
InetAddress 클래스는 IP 주소를 나타내고 IP를 확인한다.
InetAddress 클래스는 자바에서 제공되는 여러 개의 static 메소드에 의해서 생성한다.
InetAddress 클래스는 생성자를 이용한 인스턴스 생성은 권장하지 않는다.


URL의 연결
URL(Uniform Resource Locator)의 개요
형식 프로토콜://인터넷 주소[:포트 번호][/디렉터리 이름[/파일 이름]]
프로토콜과 인터넷 주소는 대소문자 구별하지 않으나 디렉터리 이름과 파일 이름은 대소문자를 구별한다.
기본 포트인 80 포트와 기본 파일은 생략할 수 있으므로 경로에 표시되지 않는다.
URL은 URI(Uniform Resource Identifier)의 한 유형으로 자원의 위치와 액세스에 사용되는 프로토콜을 나타낸다.
URI는 http 프로토콜이나 ftp 프로토콜을 제외한 이름 영역이다.

URL은 인터넷에 있는 정보의 위치를 표기하기 위한 표준적 방법이다.
URL은 도메인 네임을 사용해 컴퓨터에 있는 문서로 접근할 때 사용한다.
도메인 네임은 인터넷을 쉽게 사용할 수 있도록 IP 주소에 이름 부여한 것이다.
URL 주소를 일반적으로 웹 주소 또는 인터넷 주소라고도 불린다.



URL 클래스
URL 클래스의 개요
URL 클래스는 웹의 자원을 사용하기 위한 포인터 역할인 URL을 나타낸다.
웹의 자원은 파일이나 디렉터리처럼 단순한 것일 수도 있고 데이터베이스나 검색 엔진에 대한 쿼리와
같이 더 복잡한 객체에 대한 참조일 수도 있다.

























